mixin shape(size='2rem', variation=50, animations=['shaking', 'rotating'], colors=['tertiary', 'amber'], borderRadius='100rem', duration=25)
  -
    var [width, height] = size.split(' ');

    if (!height) {
      height = width;
    }

  div.morphing-shape(
    style={
      'position': 'relative',
      'height': height,
      'width': width,
    }
  )
    div.goo(
      style={
        'position': 'absolute',
        'filter': 'url(#fancy-goo)',
        'width': '100%',
        'height': '100%',
      }
    )
      -
        const randomDelay = () => `-${Math.random() * duration}s`;
        const any = (arr) => arr[Math.floor(Math.random() * arr.length)];
        const colorName = (i) => colors[i % colors.length];
        const animationName = () => any(animations);
        const randomSize = () => Math.random() * (100 - variation) + variation;

        let count = 4;

      while count > 0
        -
          const height = randomSize();
          const width = randomSize();
          const topOffset = (100 - height) / 2;
          const leftOffset = (100 - width) / 2;
          const background = colorName(count);

        .shape(
          style={
            'position': 'absolute',
            'animation-duration': `${duration}s`,
            'animation-iteration-count': 'infinite',
            'animation-direction': 'alternate',
            'animation-delay': randomDelay(),
            'animation-name': animationName(),
            'height': `${height}%`,
            'width': `${width}%`,
            'top': `${topOffset}%`,
            'left': `${leftOffset}%`,
            'background': background.startsWith('--') ? `var(${background})` : background,
            'border-radius': borderRadius,
          }
        )
        - count--

    div(
      flex-row
      flex-center
      style={
        'position': 'absolute',
        'width': '100%',
        'height': '100%',
      }
    )
      block