mixin splitter(top, bottom)
  - var topAttrs = { [top]: top };

  section(
    style=`
      height: 5vh;
    `
  )&attributes(topAttrs)
  section.splitter(
    style=`
      position: relative;
      width: 100%;
      overflow: hidden;
      margin-top: -5vh;
    `
  )
    - 
      var animations = ['shaking', 'stronger-shaking', 'sliding', 'rotating'];
      var randomDelay = () => `-${Math.random() * 25}s`;
      var randomRadius = () => `${Math.random() * 100}%`;
      var randomHeight = () => Math.random() * 50 + 50;
      var animationName = () => animations[Math.floor(Math.random() * animations.length)];
      var map = (val, [domainLower, domainUpper], [rangeLower, rangeUpper]) => {
        const domain = domainUpper - domainLower;
        const range = rangeUpper - rangeLower;
        const valuePercentage = (val - domainLower) / domain;

        return rangeLower + (range * valuePercentage);
      }

    section(
      style=`
        height: 10vh;
        margin-bottom: 0vh;
      `
    )&attributes(topAttrs)

    section(
      flex-row
      style=`
        margin-top: -2vh;
        height: 10vh;
      `
    )
      - 
        var count = 15;
        var total = count;
        var width = `${100 / count * 2}vw`;

      while count > 0
        .circle(
          style={
            'animation-delay': randomDelay(),
            'animation-name': animationName(),
            'border-radius': '100rem',
            'height': randomHeight() * Math.sin(map(count, [0, total], [Math.PI * .1, Math.PI * .9])) + '%',
            'width': width
          }
        )&attributes({ [top]: top })
        - count--